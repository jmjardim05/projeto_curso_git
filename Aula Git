git init => inicializa o controle de versão no diretório (cria um novo repositório)

git clone => clona, copia um repositório remoto para trabalhar localmente

git add. / git add [nome_do_arquivo] => adiciona arquivos ao reposítório, deixando-os prontos para o commit

git commit -m "msg de commit" +=> salva as alterações no repositório, com uma mensagem

git push => sobe as alterações feitas no repositório local para o repositório remoto (check-in)

git pull => baixa as alterações salvas no repositório remoto para o repositório local (check-out)

git merge => quando há conflito de versões, serve para definir qual versão subir... também serve para unir arquivos em branches distintas apara a branch principal

"branch" => são ramificaçãoes do repositório base, ao criar o repositório é gerado o branch "master" e serve de base para as demais ramificações, 
use branches quando for necessário trabalhar em uma nova funcionalidade sem alterar o código em produção

git status => traz infomações sobre o estado atual do repositório

git log => traz o histórico de alterações no repositório

git branch [nome_da_branch] => cria uma nova branch no repositório 

-> faça pequenos commits (com o mínimo de alterações e arquivos alaterados de uma só vez), sempre com uma mensgaem que mostre o que vc está fazendo/fez naquele commit
-> se precisar criar uma nova fuincionalidade com potencial de quebrar outras partes da aplicação, crie branches
 
 Após abrir um repositório remoto no GitHub:
 
 Criar um repositório remoto serve para ter seus arquivos em um servidor e poder recuperá-los sempre que necessário, sem o risco de perder seu projeto
 
 -> git remote add [url_do_repoositorio_remoto] => adiciona o link para o repositório remoto onde os arquivos desse repositório serão compartilhados através do comando git push
 -> git push -u origin master => sobe os arquivos para o repositório remoto, setando ao mesmo tempo para que os comandos push,pull e rebase já saibam para qual branch enviar 
 quando esses comandos são executados sem parâmetros
 
 -> git push sem parâmetros deverá enviar os arquivos 'commitados' para o repositório remoto já na branch definida com git push -u
 
 Branches
 --------
 
 Branches permitem que diferentes versões de um mesmo conteúdo se desenvolvam ao mesmo tempo, porém de forma independente, enquanto você recombina periodicamente
 as contribuições de diferentes branches em um processo dchamado de fusão (merging)
 
 O comdo git branch "nom_da_branch" apenas cria a branch mas não muda a referência do origin que continua apontando para a branch padrão (master)
 Digitando apenas git branch lista todas as branches do projeto
 
 git checkout "nome_da_branch" troca de branch no projeto
 
 git branch -D "nom_da_branch" exclui a branch do projeto
 
 git checkout -b "nome_da_branch" cria a branch e já muda para a branch criada
 
 git checkout -- nome_do_arquivo reseta as alaterações no arquivo
 
 git reset HEAD nome_do_arquivo retira o arquivo da 'fila' do commit (após utilizar o git add)
 
 git commit --amend edita a msg do ultimo commit